---
# This is the parameter file for the words-in-noise-EEG experiment.
# It is a YAML file; Here is a good overview  (http://docs.ansible.com/ansible/YAMLSyntax.html)
# In general, you can edit anything after a colon (:)
# Descriptions of what each parameter does is provided in the comments
experiment info:
    exp-name: words-in-noise-EEG            # The name of the expeirment
    data-path: data/                        # the folder where you want to save the data (must end in /)
    user-input:
        subject: ''                         # '' , provides a blank field for entering subject id (tags data file)
        gender:                             # provides a list of options for gender in gui
            - male
            - female
        hand:                               # provides a list of options for handedness in gui
            - left
            - right
devices:
    monitor:                                # sets the parameters for the visual.Window ()
        screen: 0                           # which screen we are using
        screenHz: 60.0                      # what is the refresh rate?
        size: [1440, 900]                   # size of screen in pixels
        units: pix                          # screen units (pix)
        win type: pyglet                    # type of window (pyglet, pygame)
        background color: black             # what color is the background?
        full screen: False                  # True or False fullscreen
    mouse:
        visible: True                       # True or False mouse visible
    keyboard:
        keys quit: [escape]                 # Keys that will quit
        keys next: [space]                  # Keys that will move to the next thing (like for instructions)
method:
    conditions:                             # a list of the conditions in the experiment
        - Auditory
        - Visual
        - Environmental
    reps:
        baseline staircase:
            blocks per condition: 1        # number of blocks per conditions
            trials per block: 6             # number of trials to do in each block
            trials per staircase: 12         # number of trials
            rest after blocks: [1, 3]       # blocks we should do rest after
        main staircase:
            blocks per condition: 1
            trials per block: 6
            trials per staircase: 12
            rest after blocks: [1, 3]
    timing:
        block title screen: 1.0             # how long in seconds is the block title screen?
        intertrial interval: 2.0            # how long in seconds is the intertrial interval? (here is where you load stims)
        stimulus presentation window: 4.0   # ***** how long in seconds is the stimulus presentation window?
        prestimulus period: 1.0             # how long in seconds is the prestimulus period
        post stimulus waiting period: 1.0   # how long in seconds is the post stimulus waiting period?
        rest block duration: 2.0            # how long in seconds is the rest block duration?
        stimulus offset buffer: 1.0         #  ***** how longer is seconds is the stimulus offset buffer?
        frames to fade movie: 30            #  *****   how many frames should we fade the movie for?
        fade movie buffer: 0.5              # how long in seconds do you want to devote to fading in the movie?
        answer choice timeout: 3.0          # how long before we timeout the answer choice?

stimuli:
    instructions:
        units: pix
        pos: [0,0]
        height: 20
        color: gray
        font: Arial
        pages:
            - Page 1. Space to continue...
            - Page 2. Space to continue...
            - Page 3. Space to continue...
            - Page 4. Space to continue...
        rest instructions: You will now be given a 2 minute break.  The experiment will resume automatically.
    block title:
        units: pix
        pos: [0,0]
        height: 40
        color: gray
        font: Arial
    difficulty text:
        units: pix
        pos: [0,0]
        height: 40
        color: gray
        font: Arial
    fixation cross:
        units: pix
        pos: [0,0]
        height: 40
        color: gray
        font: Arial
    image mask:
        tex: 256
        mask: 'gauss'               # what do you want the mask to be?  'gauss' gives gabor; 'circle' gives circular patch
        size: [300, 400]
        units: pix
        array size: [32, 32]              #
    movie:
        pos: [0,0]
        size: [720, 400]
    noise:
        sampleRate: 48000
    word:
        sampleRate: 48000
    answers:
        left:
            units: pix
            pos: [-100, 0]
            height: 20
            color: gray
            font: Arial
        right:
            units: pix
            pos: [100, 0]
            height: 20
            color: gray
            font: Arial
        up:
            units: pix
            pos: [0, 100]
            height: 20
            color: gray
            font: Arial
        down:
            units: pix
            pos: [0, -100]
            height: 20
            color: gray
            font: Arial
staircases:
    baseline staircase:
        Auditory:
            easy:
                staircase: baseline         # which staircase we are doing (for marking data)
                label: easy                 # 'easy' or 'hard'; label for which sub-staircase this is
                condition: Auditory         # the condition we are doing (for marking data)
                startVal: 1.0              # a number; the initial value of the staircase
                stepSizes: 4               # the size of steps (how much intensity to go up per step)
                nUp: 3                      # the number of 'incorrect' responses before the staircase level increases
                nDown: 1                    # the number of 'correct' responses before the staircase level decreases
                minVal: 0.05                # None or a number; the smallest legal value for the staircase; prevents it from reaching impossible values
                maxVal: 1.0                 # None or a number; The largest legal value for the staircase; prevents it from reaching impossible values
            hard:
                staircase: baseline         # which staircase we are doing (for marking data)
                label: hard                 # 'easy' or 'hard'; label for which sub-staircase this is
                condition: Auditory         # the condition we are doing (for marking data)
                startVal: 1.0              # a number; the initial value of the staircase
                stepSizes: 4             # the size of steps (how much intensity to go up per step)
                nUp: 1                      # the number of 'incorrect' responses before the staircase level increases
                nDown: 1                    # the number of 'correct' responses before the staircase level decreases
                minVal: 0.05                # None or a number; the smallest legal value for the staircase; prevents it from reaching impossible values
                maxVal: 1.0                 # None or a number; The largest legal value for the staircase; prevents it from reaching impossible values
        Visual:
            easy:
                staircase: baseline         # which staircase we are doing (for marking data)
                label: easy                 # 'easy' or 'hard'; label for which sub-staircase this is
                condition: Visual         # the condition we are doing (for marking data)
                startVal: 1.0              # a number; the initial value of the staircase
                stepSizes: 4             # the size of steps (how much intensity to go up per step)
                nUp: 3                      # the number of 'incorrect' responses before the staircase level increases
                nDown: 1                    # the number of 'correct' responses before the staircase level decreases
                minVal: 0.05                # None or a number; the smallest legal value for the staircase; prevents it from reaching impossible values
                maxVal: 1.0                 # None or a number; The largest legal value for the staircase; prevents it from reaching impossible values
            hard:
                staircase: baseline         # which staircase we are doing (for marking data)
                label: hard                 # 'easy' or 'hard'; label for which sub-staircase this is
                condition: Visual         # the condition we are doing (for marking data)
                startVal: 1.0              # a number; the initial value of the staircase
                stepSizes: 4             # the size of steps (how much intensity to go up per step)
                nUp: 1                      # the number of 'incorrect' responses before the staircase level increases
                nDown: 1                    # the number of 'correct' responses before the staircase level decreases
                minVal: 0.05                # None or a number; the smallest legal value for the staircase; prevents it from reaching impossible values
                maxVal: 1.0                 # None or a number; The largest legal value for the staircase; prevents it from reaching impossible values
        Environmental:
            easy:
                staircase: baseline         # which staircase we are doing (for marking data)
                label: easy                 # 'easy' or 'hard'; label for which sub-staircase this is
                condition: Environmental         # the condition we are doing (for marking data)
                startVal: 1.0              # a number; the initial value of the staircase
                stepSizes: 4             # the size of steps (how much intensity to go up per step)
                nUp: 3                      # the number of 'incorrect' responses before the staircase level increases
                nDown: 1                    # the number of 'correct' responses before the staircase level decreases
                minVal: 0.05                # None or a number; the smallest legal value for the staircase; prevents it from reaching impossible values
                maxVal: 1.0                 # None or a number; The largest legal value for the staircase; prevents it from reaching impossible values
            hard:
                staircase: baseline         # which staircase we are doing (for marking data)
                label: hard                 # 'easy' or 'hard'; label for which sub-staircase this is
                condition: Environmental         # the condition we are doing (for marking data)
                startVal: 1.0              # a number; the initial value of the staircase
                stepSizes: 4             # the size of steps (how much intensity to go up per step)
                nUp: 1                      # the number of 'incorrect' responses before the staircase level increases
                nDown: 1                    # the number of 'correct' responses before the staircase level decreases
                minVal: 0.05                # None or a number; the smallest legal value for the staircase; prevents it from reaching impossible values
                maxVal: 1.0                 # None or a number; The largest legal value for the staircase; prevents it from reaching impossible values
    main staircase:
        Auditory:
            easy:
                staircase: main         # which staircase we are doing (for marking data)
                label: easy                 # 'easy' or 'hard'; label for which sub-staircase this is
                condition: Auditory         # the condition we are doing (for marking data)
                startVal: 1.0              # a number; the initial value of the staircase
                stepSizes: 4             # the size of steps (how much intensity to go up per step)
                nUp: 3                      # the number of 'incorrect' responses before the staircase level increases
                nDown: 1                    # the number of 'correct' responses before the staircase level decreases
                minVal: 0.05                # None or a number; the smallest legal value for the staircase; prevents it from reaching impossible values
                maxVal: 1.0                 # None or a number; The largest legal value for the staircase; prevents it from reaching impossible values
            hard:
                staircase: main         # which staircase we are doing (for marking data)
                label: hard                 # 'easy' or 'hard'; label for which sub-staircase this is
                condition: Auditory         # the condition we are doing (for marking data)
                startVal: 1.0              # a number; the initial value of the staircase
                stepSizes: 4             # the size of steps (how much intensity to go up per step)
                nUp: 1                      # the number of 'incorrect' responses before the staircase level increases
                nDown: 1                    # the number of 'correct' responses before the staircase level decreases
                minVal: 0.05                # None or a number; the smallest legal value for the staircase; prevents it from reaching impossible values
                maxVal: 1.0                 # None or a number; The largest legal value for the staircase; prevents it from reaching impossible values
        Visual:
            easy:
                staircase: main         # which staircase we are doing (for marking data)
                label: easy                 # 'easy' or 'hard'; label for which sub-staircase this is
                condition: Visual         # the condition we are doing (for marking data)
                startVal: 1.0              # a number; the initial value of the staircase
                stepSizes: 4             # the size of steps (how much intensity to go up per step)
                nUp: 3                      # the number of 'incorrect' responses before the staircase level increases
                nDown: 1                    # the number of 'correct' responses before the staircase level decreases
                minVal: 0.05                # None or a number; the smallest legal value for the staircase; prevents it from reaching impossible values
                maxVal: 1.0                 # None or a number; The largest legal value for the staircase; prevents it from reaching impossible values
            hard:
                staircase: main         # which staircase we are doing (for marking data)
                label: hard                 # 'easy' or 'hard'; label for which sub-staircase this is
                condition: Visual         # the condition we are doing (for marking data)
                startVal: 1.0              # a number; the initial value of the staircase
                stepSizes: 4             # the size of steps (how much intensity to go up per step)
                nUp: 1                      # the number of 'incorrect' responses before the staircase level increases
                nDown: 1                    # the number of 'correct' responses before the staircase level decreases
                minVal: 0.05                # None or a number; the smallest legal value for the staircase; prevents it from reaching impossible values
                maxVal: 1.0                 # None or a number; The largest legal value for the staircase; prevents it from reaching impossible values
        Environmental:
            easy:
                staircase: main         # which staircase we are doing (for marking data)
                label: easy                 # 'easy' or 'hard'; label for which sub-staircase this is
                condition: Environmental         # the condition we are doing (for marking data)
                startVal: 1.0              # a number; the initial value of the staircase
                stepSizes: 4             # the size of steps (how much intensity to go up per step)
                nUp: 3                      # the number of 'incorrect' responses before the staircase level increases
                nDown: 1                    # the number of 'correct' responses before the staircase level decreases
                minVal: 0.05                # None or a number; the smallest legal value for the staircase; prevents it from reaching impossible values
                maxVal: 1.0                 # None or a number; The largest legal value for the staircase; prevents it from reaching impossible values
            hard:
                staircase: main         # which staircase we are doing (for marking data)
                label: hard                 # 'easy' or 'hard'; label for which sub-staircase this is
                condition: Environmental         # the condition we are doing (for marking data)
                startVal: 1.0              # a number; the initial value of the staircase
                stepSizes: 4             # the size of steps (how much intensity to go up per step)
                nUp: 1                      # the number of 'incorrect' responses before the staircase level increases
                nDown: 1                    # the number of 'correct' responses before the staircase level decreases
                minVal: 0.05                # None or a number; the smallest legal value for the staircase; prevents it from reaching impossible values
                maxVal: 1.0                 # None or a number; The largest legal value for the staircase; prevents it from reaching impossible values
